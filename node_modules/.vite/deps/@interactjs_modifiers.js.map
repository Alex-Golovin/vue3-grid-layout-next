{
  "version": 3,
  "sources": ["../../.pnpm/@interactjs+snappers@1.10.27_@interactjs+utils@1.10.27/node_modules/@interactjs/snappers/edgeTarget.ts", "../../.pnpm/@interactjs+snappers@1.10.27_@interactjs+utils@1.10.27/node_modules/@interactjs/snappers/elements.ts", "../../.pnpm/@interactjs+snappers@1.10.27_@interactjs+utils@1.10.27/node_modules/@interactjs/snappers/grid.ts", "../../.pnpm/@interactjs+snappers@1.10.27_@interactjs+utils@1.10.27/node_modules/@interactjs/snappers/plugin.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/Modification.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/base.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/aspectRatio.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/restrict/pointer.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/restrict/edges.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/restrict/rect.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/restrict/size.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/snap/pointer.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/snap/size.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/snap/edges.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/noop.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/all.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/plugin.ts", "../../.pnpm/@interactjs+modifiers@1.10.27_@interactjs+core@1.10.27_@interactjs+utils@1.10.27__@interactjs+utils@1.10.27/node_modules/@interactjs/modifiers/index.ts"],
  "sourcesContent": ["export default () => {}\n", "export default () => {}\n", "import type { Rect, Point } from '@interactjs/core/types'\nimport type { SnapFunction, SnapTarget } from '@interactjs/modifiers/snap/pointer'\n\nexport interface GridOptionsBase {\n  range?: number\n  limits?: Rect\n  offset?: Point\n}\nexport interface GridOptionsXY extends GridOptionsBase {\n  x: number\n  y: number\n}\nexport interface GridOptionsTopLeft extends GridOptionsBase {\n  top?: number\n  left?: number\n}\nexport interface GridOptionsBottomRight extends GridOptionsBase {\n  bottom?: number\n  right?: number\n}\nexport interface GridOptionsWidthHeight extends GridOptionsBase {\n  width?: number\n  height?: number\n}\n\nexport type GridOptions = GridOptionsXY | GridOptionsTopLeft | GridOptionsBottomRight | GridOptionsWidthHeight\n\nexport default (grid: GridOptions) => {\n  const coordFields = (\n    [\n      ['x', 'y'],\n      ['left', 'top'],\n      ['right', 'bottom'],\n      ['width', 'height'],\n    ] as const\n  ).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left: -Infinity,\n        right: Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n", "import type { Plugin } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Plugin = {\n  id: 'snappers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n", "import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/core/types'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './types'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  startEdges!: EdgeOptions\n  edges: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n    this.edges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n  }\n\n  start({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.startEdges = extend({}, interaction.edges)\n    this.edges = extend({}, this.startEdges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg(arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect ||= interaction.rect\n    arg.edges ||= this.startEdges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll(arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll(arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect, edges: unmodifiedEdges } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n    arg.edges = extend({}, unmodifiedEdges)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(arg.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    extend(this.edges, arg.edges)\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction(arg: { phase: EventPhase; rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply(\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd(arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop(arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates(modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo(options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom(other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.startEdges = other.startEdges\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy() {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult(coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList(interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset(rect, coords) {\n  return rect\n    ? {\n        left: coords.x - rect.left,\n        top: coords.y - rect.top,\n        right: rect.right - coords.x,\n        bottom: rect.bottom - coords.y,\n      }\n    : {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      }\n}\n", "import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\n\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result,\n>(module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const { interaction } = arg\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, interaction.coords.start.page)\n      interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.setAndApply(arg)\n      interaction.edges = modification.edges\n\n      return ret\n    },\n\n    'interactions:before-action-end': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.beforeEnd(arg)\n      interaction.edges = modification.startEdges\n\n      return ret\n    },\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n", "/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This modifier forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport { makeModifier } from './base'\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\n  AspectRatioOptions,\n  {\n    startCoords: Point\n    startRect: Rect\n    linkedEdges: EdgeOptions\n    ratio: number\n    equalDelta: boolean\n    xIsPrimaryAxis: boolean\n    edgeSign: {\n      x: number\n      y: number\n    }\n    subModification: Modification\n  }\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start(arg) {\n    const { state, rect, edges, pageCoords: coords } = arg\n    let { ratio, enabled } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: edges.top || (edges.left && !edges.bottom),\n      left: edges.left || (edges.top && !edges.right),\n      bottom: edges.bottom || (edges.right && !edges.top),\n      right: edges.right || (edges.bottom && !edges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(edges.left || edges.right)\n\n    if (state.equalDelta) {\n      const sign = (linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)\n      state.edgeSign = {\n        x: sign,\n        y: sign,\n      }\n    } else {\n      state.edgeSign = {\n        x: linkedEdges.left ? -1 : 1,\n        y: linkedEdges.top ? -1 : 1,\n      }\n    }\n\n    if (enabled !== false) {\n      extend(edges, linkedEdges)\n    }\n\n    if (!modifiers?.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set(arg) {\n    const { state, rect, coords } = arg\n    const { linkedEdges } = state\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    extend(arg.edges, linkedEdges)\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign.y\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign.x\n  }\n}\n\nfunction setRatio(\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign.y\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign.x\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule, ModifierState } from '../types'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\n  RestrictOptions,\n  {\n    offset: Rect\n  }\n>\n\nfunction start({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect(\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n", "// This modifier adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\n  RestrictEdgesOptions,\n  {\n    inner: Rect\n    outer: Rect\n    offset: RestrictEdgesOptions['offset']\n  }\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect(rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n", "import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend(\n  {\n    get elementRect() {\n      return { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    set elementRect(_) {},\n  },\n  restrict.defaults,\n)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n", "import type { Point, Rect, Size } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start(arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\n  ModifierState<\n    RestrictSizeOptions & { inner: Rect; outer: Rect },\n    {\n      min: Rect\n      max: Rect\n    }\n  >\n\nfunction set(arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n", "import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName, Point, RectResolvable, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets?: SnapTarget[]\n  // target range\n  range?: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints?: Point[]\n  // startCoords = offset snapping from drag start page position\n  offset?: Point | RectResolvable<[Interaction]> | 'startCoords'\n  offsetWithOrigin?: boolean\n  origin?: RectResolvable<[Element]> | Point\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\n  SnapOptions,\n  {\n    offsets?: Offset[]\n    closest?: any\n    targetFields?: string[][]\n  }\n>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n          index,\n          relativePoint,\n          x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n          y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n        }))\n      : [\n          {\n            index: 0,\n            relativePoint: null,\n            x: snapOffset.x,\n            y: snapOffset.y,\n          },\n        ]\n}\n\nfunction set(arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable!, interaction.element!, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets: SnapPosition[] = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets!) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets!.length; index < len; index++) {\n      const snapTarget = options.targets![index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n          closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n            distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n            (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n          !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin(arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n", "// This modifier allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snap } from './pointer'\n\nexport type SnapSizeOptions = Pick<SnapOptions, 'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [\n        {\n          x: edges.left ? 0 : 1,\n          y: edges.top ? 0 : 1,\n        },\n      ],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set(arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of options.targets || []) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    } else {\n      target = snapTarget\n    }\n\n    if (!target) {\n      continue\n    }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n", "/**\n * @module modifiers/snapEdges\n *\n * @description\n * This modifier allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState, ReturnType<typeof snapSize.set>> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(clone(snapSize.defaults), {\n    targets: undefined,\n    range: undefined,\n    offset: { x: 0, y: 0 },\n  } as const),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n", "import type { ModifierFunction } from './types'\n\nconst noop = (() => {}) as unknown as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n", "/* eslint-disable n/no-extraneous-import, import/no-unresolved */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid/avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband/rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring/spring'\nimport transform from './transform/transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n", "import type { Plugin } from '@interactjs/core/scope'\nimport snappers from '@interactjs/snappers/plugin'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './all'\nimport './base'\n\nimport all from './all'\nimport base from './base'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Plugin = {\n  id: 'modifiers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n", "/* eslint-disable no-console, eol-last, import/no-duplicates,  import/no-extraneous-dependencies, import/order */\nimport '@interactjs/modifiers/plugin'\nimport interact from '@interactjs/interact/index'\nimport plugin from '@interactjs/modifiers/plugin'\ninteract.use(plugin)"],
  "mappings": "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",
  "names": ["grid", "coordFields", "filter", "_ref", "xField", "yField", "gridFunc", "x", "y", "range", "limits", "left", "right", "Infinity", "top", "bottom", "offset", "result", "gridx", "Math", "round", "gridy", "max", "min", "snappersPlugin", "id", "install", "scope", "interact", "interactStatic", "snappers", "Modification", "states", "startOffset", "left", "right", "top", "bottom", "startDelta", "result", "endResult", "startEdges", "edges", "interaction", "constructor", "start", "_ref", "phase", "getModifierList", "prepareStates", "modifierList", "extend", "x", "y", "pageCoords", "preEnd", "createResult", "startAll", "arg", "fillArg", "interactable", "element", "rect", "state", "methods", "setAll", "skipModifiers", "unmodifiedRect", "coords", "unmodifiedEdges", "slice", "newResult", "_state$methods", "options", "lastModifierCoords", "returnValue", "set", "rectUtils", "addEdges", "delta", "rectDelta", "prevCoords", "prevRect", "rectChanged", "applyToInteraction", "curCoords", "cur", "startCoords", "coordsSet", "page", "client", "width", "setAndApply", "modifiedCoords", "adjustment", "beforeEnd", "event", "doPreend", "endPosition", "stop", "modifierArg", "name", "index", "restoreInteractionCoords", "modification", "_ref2", "coordsAndDeltas", "shouldDo", "copyFrom", "other", "map", "clone", "destroy", "eventProps", "changed", "actionOptions", "modifiers", "actionModifiers", "getRectOffset", "defaults", "module", "methods", "start", "set", "beforeEnd", "modifier", "_options", "options", "name", "enable", "disable", "_defaults", "iEvent", "interaction", "_ref", "result", "modifiersBase", "id", "before", "install", "scope", "listeners", "arg", "modification", "edges", "setAndApply", "addEventModifiers", "aspectRatio", "start", "arg", "state", "rect", "edges", "pageCoords", "coords", "ratio", "enabled", "options", "equalDelta", "modifiers", "width", "height", "startCoords", "extend", "startRect", "linkedEdges", "top", "left", "bottom", "right", "xIsPrimaryAxis", "sign", "edgeSign", "x", "y", "length", "subModification", "Modification", "interaction", "copyFrom", "modification", "prepareStates", "startAll", "set", "initialCoords", "aspectMethod", "setEqualDelta", "setRatio", "correctedRect", "addEdges", "result", "setAll", "prevCoords", "prevRect", "delta", "changed", "xIsCriticalAxis", "Math", "abs", "eventProps", "defaults", "_ref", "_ref2", "newHeight", "newWidth", "makeModifier", "rect", "startOffset", "state", "interaction", "pageCoords", "_ref", "options", "elementRect", "offset", "left", "top", "right", "bottom", "restriction", "widthDiff", "width", "heightDiff", "height", "coords", "_ref2", "rectUtils", "xywhToTlbr", "x", "Math", "max", "min", "getRestrictionRect", "endOnly", "enabled", "start", "set", "defaults", "noInner", "top", "left", "bottom", "right", "noOuter", "start", "_ref", "interaction", "startOffset", "state", "options", "offset", "offsetRect", "getRestrictionRect", "coords", "page", "rectToXY", "x", "y", "set", "_ref2", "edges", "extend", "inner", "outer", "fixRect", "Math", "min", "max", "rect", "defaults", "edge", "endOnly", "enabled", "restrictEdges", "makeModifier", "defaults", "extend", "elementRect", "top", "left", "bottom", "right", "restrict", "restrictRect", "start", "set", "noMin", "width", "Infinity", "height", "noMax", "start", "set", "interaction", "state", "rect", "edges", "arg", "options", "minSize", "tlbrToXywh", "getRestrictionRect", "min", "coords", "maxSize", "rectUtils", "endOnly", "inner", "extend", "restrictEdges", "noInner", "top", "bottom", "outer", "left", "right", "defaults", "max", "enabled", "interaction", "interactable", "element", "rect", "state", "startOffset", "arg", "options", "x", "y", "snapOffset", "offset", "coords", "start", "page", "offsetRect", "resolveRectLike", "origin", "relativePoints", "index", "relativePoint", "left", "set", "offsets", "getOriginXY", "extend", "offsetWithOrigin", "relativeX", "relativeY", "len", "targets", "target", "push", "is", "number", "range", "source", "closest", "inRange", "distance", "delta", "dx", "dy", "optionsOrigin", "defaults", "Infinity", "endOnly", "enabled", "start", "arg", "state", "edges", "options", "targets", "relativePoints", "x", "left", "y", "top", "offset", "origin", "range", "targetFields", "snap", "offsets", "set", "interaction", "coords", "relative", "extend", "snapTarget", "target", "is", "func", "xField", "yField", "push", "returnValue", "defaults", "Infinity", "endOnly", "enabled", "snapSize", "makeModifier", "start", "arg", "edges", "state", "targetFields", "left", "top", "snapSize", "snapEdges", "set", "defaults", "extend", "clone", "targets", "undefined", "range", "offset", "x", "y", "makeModifier", "noop", "_defaults", "aspectRatio", "restrictEdges", "restrict", "restrictRect", "restrictSize", "snapEdges", "snap", "snapSize", "spring", "avoid", "transform", "rubberband", "modifiers", "id", "install", "scope", "interactStatic", "interact", "usePlugin", "base", "snappers", "all", "type", "_defaults", "_methods", "defaults", "perAction", "interact", "use", "plugin"]
}
